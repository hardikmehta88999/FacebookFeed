{"version":3,"sources":["components/ProtectedRoute.js","firebase/firebase.js","actions/auth.js","components/Home.js","components/Login.js","components/signup.js","components/Profile.js","App.js","reducers/auth.js","reducers/index.js","Root.js","configureStore.js","serviceWorker.js","index.js","images/signin-image.webp","images/google.PNG","images/signup-image.webp"],"names":["ProtectedRoute","Component","component","isAuthenticated","isVerifying","rest","render","props","to","pathname","state","from","location","myFirebase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","receiveLogin","user","type","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","catch","error","logoutUser","signOut","verifyAuth","onAuthStateChanged","useStyles","makeStyles","theme","appBar","position","color","title","marginLeft","spacing","flex","root","maxWidth","marginTop","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","Transition","React","forwardRef","ref","Slide","direction","connect","isLoggingOut","logoutError","classes","useState","open","setOpen","description","setdescription","name","setname","post","setposts","opendialog","setOpendialog","imageuploaded","setimageuploaded","value","setvalue","search","setsearch","handleClickOpendialog","handleCloseDialog","storage","put","on","snapshot","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","url","handleShareImage","useEffect","id","currentUser","uid","collection","doc","onSnapshot","snap","data","orderBy","arr","forEach","push","handleClose","add","timeStamp","Date","renderVideo","style","width","controls","src","renderImage","className","textDecoration","window","split","Button","variant","onClick","Container","placeholder","onChange","e","target","Dialog","onClose","aria-labelledby","DialogContent","DialogContentText","accept","files","banner","DialogActions","fullScreen","TransitionComponent","AppBar","Toolbar","IconButton","edge","aria-label","Typography","autoFocus","length","TextareaAutosize","margin","fullWidth","i","filter","toLowerCase","startsWith","map","Card","CardHeader","avatar","Avatar","CardContent","textAlign","marginRight","renderCards","Login","handleEmailChange","setState","handlePasswordChange","handleSubmit","handleGoogle","provider","GoogleAuthProvider","signInWithPopup","console","log","additionalUserInfo","isNewUser","set","displayName","image","photoURL","this","loginError","Paper","paper","float","alt","Link","href","TextField","InputProps","startAdornment","InputAdornment","errorText","submit","google","cursor","withStyles","body","backgroundColor","flexDirection","alignItems","form","marginBottom","isLoggingIn","password1","checked","createUserWithEmailAndPassword","followers","following","handlecheck","alert","Checkbox","inputProps","inline","display","pink","setuserdata","userPost","where","userpost","clear","List","key","ListItem","ListItemAvatar","ListItemText","primary","Fragment","secondary","exact","path","Home","signup","Profile","combineReducers","action","verifyingError","store","persistedState","createStore","rootReducer","applyMiddleware","thunkMiddleware","configureStore","Root","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.595c6934.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  isAuthenticated,\n  isVerifying,\n  ...rest\n}) => (\n    <Route\n      {...rest}\n      render={props =>\n        isVerifying ? (\n          <div />\n        ) : isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n              <Redirect\n                to={{\n                  pathname: \"/\",\n                  state: { from: props.location }\n                }}\n              />\n            )\n      }\n    />\n  );\n\nexport default ProtectedRoute;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDwYoewinhhNmHT2bQYk4GsAelhXay49f0\",\n  authDomain: \"onicares-6b369.firebaseapp.com\",\n  databaseURL: \"https://onicares-6b369.firebaseio.com\",\n  projectId: \"onicares-6b369\",\n  storageBucket: \"onicares-6b369.appspot.com\",\n  messagingSenderId: \"545678682203\",\n  appId: \"1:545678682203:web:aa96c7caebdad293fc377e\",\n  measurementId: \"G-TEF2KX8NJD\"\n};\n\nexport const myFirebase = firebase.initializeApp(firebaseConfig);\nconst baseDb = myFirebase.firestore();\nexport const db = baseDb;\nexport default firebase;","import { myFirebase } from \"../firebase/firebase\";\n\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\n\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\n\nconst requestLogin = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\n\nconst receiveLogin = user => {\n  return {\n    type: LOGIN_SUCCESS,\n    user\n  };\n};\n\nconst loginError = () => {\n  return {\n    type: LOGIN_FAILURE\n  };\n};\n\nconst requestLogout = () => {\n  return {\n    type: LOGOUT_REQUEST\n  };\n};\n\nconst receiveLogout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\nconst logoutError = () => {\n  return {\n    type: LOGOUT_FAILURE\n  };\n};\n\nconst verifyRequest = () => {\n  return {\n    type: VERIFY_REQUEST\n  };\n};\n\nconst verifySuccess = () => {\n  return {\n    type: VERIFY_SUCCESS\n  };\n};\n\nexport const loginUser = (email, password) => dispatch => {\n  dispatch(requestLogin());\n  myFirebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .then(user => {\n      dispatch(receiveLogin(user));\n    })\n    .catch(error => {\n      //Do something with the error if you want!\n      dispatch(loginError());\n    });\n};\n\nexport const logoutUser = () => dispatch => {\n  dispatch(requestLogout());\n  myFirebase\n    .auth()\n    .signOut()\n    .then(() => {\n      dispatch(receiveLogout());\n    })\n    .catch(error => {\n      //Do something with the error if you want!\n      dispatch(logoutError());\n    });\n};\n\nexport const verifyAuth = () => dispatch => {\n  dispatch(verifyRequest());\n  myFirebase.auth().onAuthStateChanged(user => {\n    if (user !== null) {\n      dispatch(receiveLogin(user));\n    }\n    dispatch(verifySuccess());\n  });\n};\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport '../App.css'\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport firebase from '../firebase/firebase';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { logoutUser } from \"../actions\";\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n    color: 'secondary'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  root: {\n    maxWidth: 550,\n    marginTop: '30px'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  // avatar: {\n  //   backgroundColor: pink[500],\n  // },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction Home(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [description, setdescription] = React.useState('')\n  const [name, setname] = React.useState('')\n  const [post, setposts] = React.useState([])\n  const [opendialog, setOpendialog] = React.useState(false);\n  const [imageuploaded, setimageuploaded] = React.useState('')\n  const [value, setvalue] = React.useState('')\n  const [search, setsearch] = React.useState('')\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleLogout = () => {\n    const { dispatch } = props;\n    dispatch(logoutUser());\n  };\n  const handleClickOpendialog = () => {\n    setOpendialog(true);\n  };\n\n  const handleimgUpload = () => {\n    const uploadTask = firebase.storage().ref(`images/${imageuploaded.name}`).put(imageuploaded);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n      },\n      error => {\n\n      },\n      () => {\n\n        firebase.storage()\n          .ref(\"images\")\n          .child(imageuploaded.name)\n          .getDownloadURL()\n          .then(url => {\n            setimageuploaded(url)\n            handleShareImage(url)\n          });\n      }\n    );\n  }\n  const handleCloseDialog = () => {\n    setOpendialog(false);\n    handleimgUpload()\n  };\n\n  const handleClosedDialog = () => {\n    setOpendialog(false);\n  };\n\n  useEffect(() => {\n    const id = firebase.auth().currentUser.uid;\n    firebase.firestore().collection('user').doc(id).onSnapshot(snap => {\n      setname(snap.data().name)\n      firebase.firestore().collection('post').orderBy('timeStamp', 'desc').onSnapshot(snap => {\n        let arr = []\n        snap.forEach(value => {\n          if (value.data().uid !== id) {\n            arr.push(value.data())\n\n          }\n\n        })\n        setposts(arr)\n      })\n    })\n\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleShare = () => {\n    setOpen(false);\n    if (description.length > 0) {\n      const id = firebase.auth().currentUser.uid;\n      firebase.firestore().collection('post').add({\n        uid: id,\n        description: description,\n        name: name,\n        timeStamp: new Date(),\n        type: 'post'\n      })\n    }\n\n  }\n  const handleShareImage = (url) => {\n    if (url) {\n      const id = firebase.auth().currentUser.uid;\n      firebase.firestore().collection('post').add({\n        uid: id,\n        name: name,\n        description: url,\n        timeStamp: new Date(),\n        type: value\n      })\n    }\n\n  }\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      const banner = e.target.files[0];\n      setimageuploaded(banner)\n    }\n  };\n  const renderVideo = (type, data) => {\n    if (type === \"video\") {\n      return (<video style={{ maxWidth: '100%', width: '500px' }}\n        controls\n        src={data} />\n      )\n    }\n  }\n  const renderImage = (type, data) => {\n    if (type === \"image\") {\n      return (\n        <img src={data} style={{ width: '100%', height: '250px' }} />\n      )\n    }\n  }\n  const renderCards = (post) => {\n\n    if (post.length > 0) {\n      for (var i = 0; i < post.length; i++) {\n        let arr = post;\n        if (search.length > 0) {\n          arr = post.filter(user => {\n            if (user.name != null && user.name.toLowerCase().startsWith(search.toLowerCase())) {\n              return true;\n            } else {\n              return false;\n            }\n          })\n        }\n        return arr.map(data => {\n          return (\n            <Card className={classes.root}>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"recipe\" >\n                    {data.name[0]}\n                  </Avatar>\n                }\n\n                title={data.name}\n              />\n              <CardContent>\n\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ textAlign: 'center', marginLeft: '40px', marginTop: '-20px', marginRight: '20px' }}>\n                  {data.type === \"post\" ? data.description : \" \"}\n                </Typography>\n                {\n                  renderVideo(data.type, data.description)\n                }{renderImage(data.type, data.description)}\n              </CardContent>\n            </Card>\n\n          )\n        })\n      }\n    }\n    else {\n      return (<div style={{ marginTop: '30px' }}>No Post Yet</div>)\n    }\n\n\n  }\n  return (\n    < div >\n      <header className='navbar'>\n        <div className='navbar__title'> Feed App</div>\n        <div className='navbar__item'><Link to={'/'} style={{ textDecoration: 'none', color: 1 == 1 ? '#0000FF' : '#D3D3D3' }}>\n          Feed\n          </Link>{' '}</div>\n        <div className='navbar__item'><Link to=\"/profile\" style={{ textDecoration: 'none', color: window.location.pathname.split(\"/\")[1] === 'profile' ? '#0000FF' : '#D3D3D3' }}>Profile</Link></div>\n        <Button variant=\"contained\"\n          color=\"primary\" onClick={\n            handleLogout\n          }>Logout</Button>\n\n      </header>\n      <Container maxWidth=\"sm\">\n        <input type=\"text\" placeholder=\"Search..\" className=\"myInput\"\n          onChange={(e) => { setsearch(e.target.value) }} title=\"Type in a name\" value={search}></input>\n        <Button variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }} onClick={() => handleClickOpen()}>Write Post</Button>&nbsp;\n        <Button variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }} onClick={() => { setvalue(\"image\"); handleClickOpendialog() }}>Upload Image</Button>\n        <Dialog open={opendialog} onClose={handleCloseDialog} aria-labelledby=\"form-dialog-title\" >\n          <DialogContent>\n            <DialogContentText>\n              Select {value}\n            </DialogContentText>\n            <input type=\"file\" accept={value === \"image\" ? \"image/*\" : \"video/*\"} onChange={handleChange} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseDialog} color=\"primary\">\n              OK\n          </Button>\n            <Button onClick={handleClosedDialog} color=\"primary\">\n              Cancel\n          </Button>\n          </DialogActions>\n        </Dialog>&nbsp;\n        <Button variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }} onClick={() => { setvalue(\"video\"); handleClickOpendialog() }}>\n          Upload Video</Button>\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Write Something to Post\n            </Typography>\n              <Button autoFocus color=\"inherit\" onClick={handleShare}>\n                Share\n            </Button>\n            </Toolbar>\n          </AppBar>\n          <TextareaAutosize\n            style={{ width: '100%', height: '200px' }}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            name=\"description\"\n            placeholder=\"Description\"\n            type=\"textarea\"\n            id=\"description\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}\n          />\n        </Dialog>\n        {renderCards(post)}\n      </Container>\n    </div >\n  );\n}\nfunction mapStateToProps(state) {\n  return {\n    isLoggingOut: state.auth.isLoggingOut,\n    logoutError: state.auth.logoutError,\n    isAuthenticated: state.auth.isAuthenticated\n\n  };\n}\n\nexport default connect(mapStateToProps)(Home)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { loginUser } from \"../actions\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Link from '@material-ui/core/Link';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport image from '../images/signin-image.webp';\nimport google from '../images/google.PNG';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockIcon from '@material-ui/icons/Lock';\nimport firebase from '../firebase/firebase'\nconst styles = () => ({\n  \"@global\": {\n    body: {\n      backgroundColor: \"#fff\"\n    }\n  },\n  paper: {\n    marginTop: 100,\n\n    width: 'auto',\n    height: 'auto',\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    backgroundColor: \"#f50057\"\n  },\n  form: {\n    marginTop: 1\n  },\n  errorText: {\n    color: \"#f50057\",\n    marginBottom: 5,\n    textAlign: \"center\"\n  }\n});\n\nclass Login extends Component {\n  state = { email: \"\", password: \"\" };\n\n  handleEmailChange = ({ target }) => {\n    this.setState({ email: target.value });\n  };\n\n  handlePasswordChange = ({ target }) => {\n    this.setState({ password: target.value });\n  };\n\n  handleSubmit = () => {\n    const { dispatch } = this.props;\n    const { email, password } = this.state;\n\n    dispatch(loginUser(email, password));\n  };\n  handleGoogle = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(user => {\n      console.log(user)\n      if (user.additionalUserInfo.isNewUser) {\n        firebase.firestore().collection('user').doc(user.user.uid).set({\n\n          email: user.user.email,\n          name: user.user.displayName,\n          uid: user.user.uid,\n          image: user.user.photoURL\n        })\n      }\n    })\n  }\n\n  render() {\n    const { classes, loginError, isAuthenticated } = this.props;\n    if (isAuthenticated) {\n      return <Redirect to=\"/home\" />;\n    } else {\n      return (\n        <Container maxWidth='md'>\n          <Paper className={classes.paper} style={{ height: '450px' }}>\n            <div style={{ float: 'left' }}>\n              <img src={image} alt=\"im\"></img>\n              <Link href='/signup' style={{ textDecoration: 'underline' }}>\n                <Typography component=\"h1\" variant=\"h5\" style={{ textAlign: 'center', marginTop: \"20px\" }} >\n                  Create an Account\n            </Typography>\n              </Link>\n            </div>\n\n            <div style={{ float: 'right' }}>\n              <Typography component=\"h1\" variant=\"h5\" >\n                Login\n            </Typography>\n              <TextField\n                margin=\"normal\"\n                fullWidth\n                id=\"input-with-icon-textfield\"\n                placeholder=\"Email Address\"\n                name=\"email\"\n                onChange={this.handleEmailChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <PersonIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <TextField\n                margin=\"normal\"\n                fullWidth\n                id=\"input-with-icon-textfield\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handlePasswordChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <LockIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              {loginError && (\n                <Typography component=\"p\" className={classes.errorText}>\n                  Incorrect email or password.\n                </Typography>\n              )}\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                style={{ width: '90px', marginTop: '40px' }}\n                color=\"primary\"\n                className={classes.submit}\n                onClick={this.handleSubmit}\n              >\n                Log in\n            </Button>\n              <div style={{ marginTop: \"80px\" }}>\n                or login with&nbsp;<img src={google} alt=\"google\" onClick={() => this.handleGoogle()} style={{ cursor: 'pointer' }}></img>\n              </div>\n            </div>\n          </Paper>\n\n        </Container>\n      );\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggingIn: state.auth.isLoggingIn,\n    loginError: state.auth.loginError,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(Login));\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport image from '../images/signup-image.webp';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { myFirebase } from \"../firebase/firebase\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport firebase from 'firebase'\r\n\r\nconst styles = () => ({\r\n    \"@global\": {\r\n        body: {\r\n            backgroundColor: \"#fff\"\r\n        }\r\n    },\r\n    paper: {\r\n        marginTop: 100,\r\n\r\n        width: 'auto',\r\n        height: 'auto',\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        backgroundColor: \"#f50057\"\r\n    },\r\n    form: {\r\n        marginTop: 1\r\n    },\r\n    errorText: {\r\n        color: \"#f50057\",\r\n        marginBottom: 5,\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nclass Login extends Component {\r\n    state = { email: \"\", password: \"\", name: '', password1: '', checked: false };\r\n\r\n    handleEmailChange = ({ target }) => {\r\n        this.setState({ email: target.value });\r\n    };\r\n\r\n    handlePasswordChange = ({ target }) => {\r\n        this.setState({ password: target.value });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n\r\n        myFirebase\r\n            .auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(user => {\r\n                firebase.firestore().collection('user').doc(user.user.uid).set({\r\n\r\n                    email: this.state.email,\r\n                    followers: [],\r\n                    name: this.state.name,\r\n                    following: [],\r\n                    uid: user.user.uid,\r\n                    image: \"https://image.shutterstock.com/image-vector/people-vector-icon-260nw-378571234.jpg\"\r\n                })\r\n\r\n            })\r\n    };\r\n\r\n    handlecheck = () => {\r\n        if (this.state.password === '')\r\n            alert(\"Please Fill your Details\");\r\n        else if (this.state.password1 === '')\r\n            alert(\"Please enter Repeat password\");\r\n        else if (this.state.password !== this.state.password1) {\r\n            alert(\"\\nPassword did not match: Please try again...\")\r\n            return false;\r\n        }\r\n        else if (this.state.checked === false) {\r\n            alert(\"Please Accept the Terms and Condition\")\r\n        }\r\n        else {\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n    render() {\r\n        const { classes, isAuthenticated } = this.props;\r\n        if (isAuthenticated) {\r\n            return <Redirect to=\"/home\" />;\r\n        } else {\r\n            return (\r\n\r\n                <Container maxWidth=\"md\">\r\n                    <Paper className={classes.paper} style={{ height: '370px' }}>\r\n                        <div style={{ float: 'right' }}>\r\n\r\n                            <img src={image} alt=\"image\"></img>\r\n                            <Link href=\"/\" style={{ textDecoration: 'underline' }}>\r\n                                <Typography component=\"h1\" variant=\"h5\" >\r\n                                    I am already member\r\n            </Typography>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <Container maxWidth=\"sm\" style={{ float: 'left', marginTop: '40px' }}>\r\n                            <Typography component=\"h1\" variant=\"h5\" >\r\n                                Sign up\r\n            </Typography>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                placeholder=\"Your Name\"\r\n                                name=\"email\"\r\n                                onChange={(e) => this.setState({ name: e.target.value })}\r\n                                id=\"input-with-icon-textfield\"\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <AccountCircle />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                id=\"input-with-icon-textfield\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                placeholder=\"Your Email\"\r\n                                name=\"email\"\r\n                                onChange={this.handleEmailChange}\r\n\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <MailIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                id=\"input-with-icon-textfield\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                type=\"password\"\r\n                                onChange={this.handlePasswordChange}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LockIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                id=\"input-with-icon-textfield\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Repeat Your Password\"\r\n                                onChange={(e) => this.setState({ password1: e.target.value })}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LockOutlinedIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <div style={{ marginTop: '10px' }}>\r\n                                <Checkbox\r\n                                    checked={this.state.checked}\r\n                                    color=\"primary\"\r\n                                    onChange={(e) => this.setState({ checked: e.target.checked })}\r\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                /> I agree all statements in Terms of service\r\n                            </div>\r\n                            <Button\r\n                                type=\"button\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                style={{ width: '150px', marginTop: '30px' }}\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                onClick={() => this.handlecheck()}\r\n                            >\r\n                                register\r\n            </Button>\r\n\r\n                        </Container>\r\n                    </Paper>\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLoggingIn: state.auth.isLoggingIn,\r\n        loginError: state.auth.loginError,\r\n        isAuthenticated: state.auth.isAuthenticated\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps)(Login));\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../firebase/firebase'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../actions\";\r\nimport { pink } from '@material-ui/core/colors';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        maxWidth: 550,\r\n        marginTop: '30px'\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    avatar: {\r\n        backgroundColor: pink[500],\r\n    },\r\n}));\r\nfunction Profile(props) {\r\n    const classes = useStyles();\r\n    const [user, setuserdata] = React.useState([]);\r\n    const [userPost, setposts] = React.useState([]);\r\n\r\n\r\n    const handleLogout = () => {\r\n        const { dispatch } = props;\r\n        dispatch(logoutUser());\r\n    };\r\n    useEffect(() => {\r\n        const id = firebase.auth().currentUser.uid;\r\n        firebase.firestore().collection('user').doc(id).onSnapshot(snap => {\r\n            let arr = []\r\n            arr.push(snap.data())\r\n            setuserdata(arr)\r\n        })\r\n        firebase.firestore().collection('post').where('uid', '==', id).orderBy('timeStamp', \"desc\").onSnapshot(snap => {\r\n            let userpost = []\r\n            snap.forEach(value => userpost.push(value.data()))\r\n            setposts(userpost)\r\n        })\r\n\r\n\r\n    }, []);\r\n    console.clear()\r\n    const renderVideo = (type, data) => {\r\n        if (type === \"video\") {\r\n            return (<video style={{ maxWidth: '100%', width: '500px' }} controls\r\n\r\n                src={data} />\r\n\r\n            )\r\n        }\r\n    }\r\n    const renderImage = (type, data) => {\r\n        if (type === \"image\") {\r\n            return (\r\n                <img src={data} style={{ width: '100%', height: '250px' }} />\r\n            )\r\n        }\r\n    }\r\n    const handlePosts = () => {\r\n        if (userPost.length > 0) {\r\n            return userPost.map(data => {\r\n                return (\r\n                    <Card className={classes.root} key={data.description}>\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar aria-label=\"recipe\" >\r\n                                    {data.name[0]}\r\n                                </Avatar>\r\n                            }\r\n                            title={data.name}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ marginLeft: '40px', marginRight: '28px', marginTop: '-15px' }}>\r\n                                {data.type === \"post\" ? data.description : \" \"}\r\n                            </Typography>\r\n                            {\r\n                                renderVideo(data.type, data.description)\r\n                            }{renderImage(data.type, data.description)}\r\n                        </CardContent>\r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ marginTop: '150px' }}>\r\n                    No Post Yet\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return (<div> <header className='navbar'>\r\n        <div className='navbar__title'> Feed App</div>\r\n        <div className='navbar__item'><Link to={'/'} style={{ textDecoration: 'none', color: 1 == 2 ? '#0000FF' : '#D3D3D3' }}>\r\n            Feed\r\n          </Link>{' '}</div>\r\n        <div className='navbar__item'><Link to=\"/profile\" style={{ textDecoration: 'none', color: window.location.pathname.split(\"/\")[1] === 'profile' ? '#0000FF' : '#D3D3D3' }}>Profile</Link></div>\r\n        <Button variant=\"contained\"\r\n            color=\"primary\" onClick={\r\n                handleLogout\r\n            }>Logout</Button>\r\n    </header>\r\n        <Container maxWidth=\"sm\">\r\n            {user.map(data => {\r\n                return (\r\n                    <List className={classes.root} key={data.uid}>\r\n                        <ListItem alignItems=\"flex-start\" >\r\n                            <ListItemAvatar>\r\n                                {(<Avatar style={{ width: '70px', height: '70px' }}>{data.name[0]}</Avatar>)}\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={<React.Fragment><Typography style={{ marginLeft: '40px', marginTop: '20px' }}>{data.name}</Typography></React.Fragment>}\r\n                                secondary={<React.Fragment>\r\n                                    <React.Fragment>\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            variant=\"body2\"\r\n                                            className={classes.inline}\r\n                                            style={{ color: '#D3D3D3', marginLeft: '20px', marginTop: '20px' }}\r\n                                            color=\"textPrimary\"\r\n                                        >\r\n                                            {\r\n                                                data.email\r\n                                            }\r\n                                        </Typography>\r\n                                    </React.Fragment>\r\n                                </React.Fragment>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                )\r\n            })}\r\n\r\n            {\r\n                handlePosts()\r\n            }\r\n\r\n        </Container >\r\n    </div>\r\n    );\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLoggingOut: state.auth.isLoggingOut,\r\n        logoutError: state.auth.logoutError,\r\n        isAuthenticated: state.auth.isAuthenticated\r\n\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile)","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport signup from \"./components/signup\";\nimport Profile from \"./components/Profile\";\n\nfunction App(props) {\n  const { isAuthenticated, isVerifying } = props;\n  return (\n    <Switch>\n      <ProtectedRoute\n        exact\n        path=\"/home\"\n        component={Home}\n        isAuthenticated={isAuthenticated}\n        isVerifying={isVerifying}\n      />\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/signup\" component={signup} />\n\n      <ProtectedRoute\n        exact\n        path=\"/profile\"\n        component={Profile}\n        isAuthenticated={isAuthenticated}\n        isVerifying={isVerifying}\n      />\n    </Switch>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    isVerifying: state.auth.isVerifying\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILURE,\n  VERIFY_REQUEST,\n  VERIFY_SUCCESS\n} from \"../actions/\";\n\nexport default (\n  state = {\n    isLoggingIn: false,\n    isLoggingOut: false,\n    isVerifying: false,\n    loginError: false,\n    logoutError: false,\n    isAuthenticated: false,\n    user: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoggingIn: true,\n        loginError: false\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggingIn: false,\n        isAuthenticated: true,\n        user: action.user\n      };\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        isLoggingIn: false,\n        isAuthenticated: false,\n        loginError: true\n      };\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isLoggingOut: true,\n        logoutError: false\n      };\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        isLoggingOut: false,\n        isAuthenticated: false,\n        user: {}\n      };\n    case LOGOUT_FAILURE:\n      return {\n        ...state,\n        isLoggingOut: false,\n        logoutError: true\n      };\n    case VERIFY_REQUEST:\n      return {\n        ...state,\n        isVerifying: true,\n        verifyingError: false\n      };\n    case VERIFY_SUCCESS:\n      return {\n        ...state,\n        isVerifying: false\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\n\nexport default combineReducers({ auth });\n","import React from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore();\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default Root;\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport { verifyAuth } from \"./actions/\";\nimport rootReducer from \"./reducers\";\n\nexport default function configureStore(persistedState) {\n  const store = createStore(\n    rootReducer,\n    persistedState,\n    applyMiddleware(thunkMiddleware)\n  );\n  store.dispatch(verifyAuth());\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/signin-image.86488bc6.webp\";","module.exports = __webpack_public_path__ + \"static/media/google.2c508400.PNG\";","module.exports = __webpack_public_path__ + \"static/media/signup-image.19501052.webp\";"],"sourceRoot":""}